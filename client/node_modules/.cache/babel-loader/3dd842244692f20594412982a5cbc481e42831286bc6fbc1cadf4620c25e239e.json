{"ast":null,"code":"import Register from\"./pages/Register/Register\";import Login from\"./pages/Login/Login\";import\"./style.scss\";import{createBrowserRouter,RouterProvider,Outlet,Navigate}from\"react-router-dom\";import Navbar from\"./components/Navbar/Navbar\";import Leftbar from\"./components/Leftbar/Leftbar\";import Rightbar from\"./components/Rightbar/Rightbar\";import Home from\"./pages/Home/Home\";import Profile from\"./pages/Profile/Profile\";import{useContext}from\"react\";import{AuthContext}from\"./context/authContext\";import{QueryClient,QueryClientProvider}from'@tanstack/react-query';//Importing all required stuff to make the code work\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;//Basically code that checks if the local storage has any users stored.\nvar queryClient=new QueryClient();var Layout=function Layout(){return/*#__PURE__*/_jsx(QueryClientProvider,{client:queryClient,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(Leftbar,{}),/*#__PURE__*/_jsx(\"div\",{style:{flex:6},children:/*#__PURE__*/_jsx(Outlet,{})}),/*#__PURE__*/_jsx(Rightbar,{})]})]})});};//Code used to keep all navbars the same regardless of page.\nvar ProtectedRoute=function ProtectedRoute(_ref){var children=_ref.children;if(!currentUser){return/*#__PURE__*/_jsx(Navigate,{to:\"/Login\"});}return children;};var router=createBrowserRouter([{path:\"/\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Layout,{})}),children:[{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})},{path:\"/Profile/:id\",element:/*#__PURE__*/_jsx(Profile,{})}]},{path:\"/Login\",element:/*#__PURE__*/_jsx(Login,{})},{path:\"/Register\",element:/*#__PURE__*/_jsx(Register,{})}]);//Code used to change pages on the Register/Login screen.\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(RouterProvider,{router:router})});}export default App;","map":{"version":3,"names":["Register","Login","createBrowserRouter","RouterProvider","Outlet","Navigate","Navbar","Leftbar","Rightbar","Home","Profile","useContext","AuthContext","QueryClient","QueryClientProvider","jsx","_jsx","jsxs","_jsxs","App","_useContext","currentUser","queryClient","Layout","client","children","style","display","flex","ProtectedRoute","_ref","to","router","path","element"],"sources":["C:/Users/rd96/OneDrive/Desktop/Social Media Clone/client/src/App.js"],"sourcesContent":["import Register from \"./pages/Register/Register\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport \"./style.scss\"\r\n\r\nimport {\r\n    createBrowserRouter,\r\n    RouterProvider,\r\n    Outlet,\r\n    Navigate,\r\n  } from \"react-router-dom\";\r\n  import Navbar from \"./components/Navbar/Navbar\"\r\n  import Leftbar from \"./components/Leftbar/Leftbar\"\r\n  import Rightbar from \"./components/Rightbar/Rightbar\"\r\n  import Home from \"./pages/Home/Home\"\r\n  import Profile from \"./pages/Profile/Profile\"\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"./context/authContext\";\r\nimport {QueryClient, QueryClientProvider} from '@tanstack/react-query'\r\n\r\n    //Importing all required stuff to make the code work\r\n\r\nfunction App(){\r\n    const {currentUser} = useContext(AuthContext);\r\n    //Basically code that checks if the local storage has any users stored.\r\n\r\n    const queryClient = new QueryClient()\r\n    \r\n    const Layout = ()=>{\r\n        return(\r\n            <QueryClientProvider client={queryClient}>\r\n\r\n            <div>\r\n                <Navbar/>\r\n            \r\n                <div style={{display:\"flex\"}}>\r\n                <Leftbar />\r\n                <div style={{flex:6}}>\r\n                    <Outlet />\r\n                </div>\r\n                <Rightbar />\r\n                </div>\r\n\r\n            </div>\r\n            </QueryClientProvider>\r\n        )\r\n    };\r\n    //Code used to keep all navbars the same regardless of page.\r\n\r\n    const ProtectedRoute = ({children}) =>{\r\n        if(!currentUser){\r\n            return <Navigate to=\"/Login\"/>\r\n        }\r\n\r\n        return children\r\n    }\r\n\r\n    const router = createBrowserRouter([\r\n        {\r\n            path: \"/\",\r\n            element: (\r\n                <ProtectedRoute>\r\n                    <Layout />\r\n                </ProtectedRoute>\r\n            ),\r\n            children:[\r\n                {\r\n                    path:\"/\",\r\n                    element:<Home/>\r\n                },\r\n                {\r\n                    path:\"/Profile/:id\",\r\n                    element:<Profile/>\r\n                },\r\n            ]\r\n        },\r\n        \r\n        {\r\n          path: \"/Login\",\r\n          element: <Login/>,\r\n        },\r\n        {\r\n            path: \"/Register\",\r\n            element: <Register/>,\r\n          },\r\n      ]);\r\n    //Code used to change pages on the Register/Login screen.\r\n    return (\r\n        <div>\r\n            <RouterProvider router={router} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,2BAA2B,CAChD,MAAO,CAAAC,KAAK,KAAM,qBAAqB,CACvC,MAAO,cAAc,CAErB,OACIC,mBAAmB,CACnBC,cAAc,CACdC,MAAM,CACNC,QAAQ,KACH,kBAAkB,CACzB,MAAO,CAAAC,MAAM,KAAM,4BAA4B,CAC/C,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,OAAO,KAAM,yBAAyB,CAC/C,OAASC,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAAQ,uBAAuB,CACnD,OAAQC,WAAW,CAAEC,mBAAmB,KAAO,uBAAuB,CAElE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEJ,QAAS,CAAAC,GAAGA,CAAA,CAAE,CACV,IAAAC,WAAA,CAAsBT,UAAU,CAACC,WAAW,CAAC,CAAtCS,WAAW,CAAAD,WAAA,CAAXC,WAAW,CAClB;AAEA,GAAM,CAAAC,WAAW,CAAG,GAAI,CAAAT,WAAW,CAAC,CAAC,CAErC,GAAM,CAAAU,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAO,CACf,mBACIP,IAAA,CAACF,mBAAmB,EAACU,MAAM,CAAEF,WAAY,CAAAG,QAAA,cAEzCP,KAAA,QAAAO,QAAA,eACIT,IAAA,CAACV,MAAM,GAAC,CAAC,cAETY,KAAA,QAAKQ,KAAK,CAAE,CAACC,OAAO,CAAC,MAAM,CAAE,CAAAF,QAAA,eAC7BT,IAAA,CAACT,OAAO,GAAE,CAAC,cACXS,IAAA,QAAKU,KAAK,CAAE,CAACE,IAAI,CAAC,CAAC,CAAE,CAAAH,QAAA,cACjBT,IAAA,CAACZ,MAAM,GAAE,CAAC,CACT,CAAC,cACNY,IAAA,CAACR,QAAQ,GAAE,CAAC,EACP,CAAC,EAEL,CAAC,CACe,CAAC,CAE9B,CAAC,CACD;AAEA,GAAM,CAAAqB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAAC,IAAA,CAAkB,IAAb,CAAAL,QAAQ,CAAAK,IAAA,CAARL,QAAQ,CAC7B,GAAG,CAACJ,WAAW,CAAC,CACZ,mBAAOL,IAAA,CAACX,QAAQ,EAAC0B,EAAE,CAAC,QAAQ,CAAC,CAAC,CAClC,CAEA,MAAO,CAAAN,QAAQ,CACnB,CAAC,CAED,GAAM,CAAAO,MAAM,CAAG9B,mBAAmB,CAAC,CAC/B,CACI+B,IAAI,CAAE,GAAG,CACTC,OAAO,cACHlB,IAAA,CAACa,cAAc,EAAAJ,QAAA,cACXT,IAAA,CAACO,MAAM,GAAE,CAAC,CACE,CACnB,CACDE,QAAQ,CAAC,CACL,CACIQ,IAAI,CAAC,GAAG,CACRC,OAAO,cAAClB,IAAA,CAACP,IAAI,GAAC,CAClB,CAAC,CACD,CACIwB,IAAI,CAAC,cAAc,CACnBC,OAAO,cAAClB,IAAA,CAACN,OAAO,GAAC,CACrB,CAAC,CAET,CAAC,CAED,CACEuB,IAAI,CAAE,QAAQ,CACdC,OAAO,cAAElB,IAAA,CAACf,KAAK,GAAC,CAClB,CAAC,CACD,CACIgC,IAAI,CAAE,WAAW,CACjBC,OAAO,cAAElB,IAAA,CAAChB,QAAQ,GAAC,CACrB,CAAC,CACJ,CAAC,CACJ;AACA,mBACIgB,IAAA,QAAAS,QAAA,cACIT,IAAA,CAACb,cAAc,EAAC6B,MAAM,CAAEA,MAAO,CAAE,CAAC,CACjC,CAAC,CAEd,CAEA,cAAe,CAAAb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}