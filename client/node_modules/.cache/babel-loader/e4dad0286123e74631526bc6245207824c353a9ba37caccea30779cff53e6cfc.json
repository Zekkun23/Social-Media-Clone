{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rd96\\\\OneDrive\\\\Desktop\\\\Social Media Clone\\\\client\\\\src\\\\components\\\\Comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./Comments.scss\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useQueryClient, useMutation } from '@tanstack/react-query';\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(['comments'], () => makeRequest.get(\"/comments?postId=\" + postId).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n\n  //Code taken from: https://www.npmjs.com/package/multer\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comment\", newComment);\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries([\"comment\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinput\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"Fsi/C5X0aJaIFg1YxzJ6bbBdWOc=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","AuthContext","useQuery","useQueryClient","useMutation","makeRequest","moment","jsxDEV","_jsxDEV","Comments","_ref","_s","postId","desc","setDesc","currentUser","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","map","comment","name","createdAt","fromNow","_c","$RefreshReg$"],"sources":["C:/Users/rd96/OneDrive/Desktop/Social Media Clone/client/src/components/Comments/Comments.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport \"./Comments.scss\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport {useQuery, useQueryClient, useMutation} from '@tanstack/react-query';\r\nimport {makeRequest} from \"../../axios\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst Comments = ({postId}) => {\r\n  const [desc, setDesc] = useState(\"\");\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const { isLoading, error, data } = useQuery (['comments'], () =>\r\n  makeRequest.get(\"/comments?postId=\"+postId).then(res=>{\r\n    return res.data;\r\n  })\r\n  );\r\n\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  //Code taken from: https://www.npmjs.com/package/multer\r\n  const mutation = useMutation(\r\n    (newComment) => {\r\n      return makeRequest.post(\"/comment\", newComment);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries([\"comment\"]);\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    mutation.mutate({ desc, postId });\r\n    setDesc(\"\");\r\n  };\r\n \r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"userinput\">\r\n        <img src={currentUser.profilePic} alt=\"\" />\r\n        <input type=\"text\" placeholder=\"Write a comment\"\r\n        value={desc} onChange={e=>setDesc(e.target.value)}/>\r\n        <button onClick={handleClick}>Send</button>\r\n      </div>\r\n      {data.map((comment) => (\r\n        <div className=\"comment\">\r\n          <img src={comment.profilePic} alt=\"\" />\r\n          <div className=\"info\">\r\n            <span>{comment.name}</span>\r\n            <p>{comment.desc}</p>\r\n          </div>\r\n          <span className=\"date\">{moment(comment.createdAt).fromNow}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}