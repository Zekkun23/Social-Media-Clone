{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rd96\\\\OneDrive\\\\Desktop\\\\Social Media Clone\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Register from \"./pages/Register/Register\";\nimport login from \"./php/login.php\";\nimport \"./style.scss\";\nimport { createBrowserRouter, RouterProvider, Outlet, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Leftbar from \"./components/Leftbar/Leftbar\";\nimport Rightbar from \"./components/Rightbar/Rightbar\";\nimport Home from \"./pages/Home/Home\";\nimport Profile from \"./pages/Profile/Profile\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./context/authContext\";\n\n//Importing all required stuff to make the code work\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  //Basically code that checks if the local storage has any users stored.\n\n  const Layout = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"login\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  };\n  //Code used to keep all navbars the same regardless of page.\n\n  const ProtectedRoute = _ref => {\n    let {\n      children\n    } = _ref;\n    if (!currentUser) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    }\n    return children;\n  };\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this),\n    children: [{\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this)\n    }, {\n      path: \"/Profile/:id\",\n      element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this)\n    }]\n  }, {\n    path: \"./php\",\n    element: /*#__PURE__*/_jsxDEV(login.php, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }, this)\n  }, {\n    path: \"/Register\",\n    element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 22\n    }, this)\n  }]);\n  //Code used to change pages on the Register/Login screen.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"T/0NbE5fCPzJ+82MNh+lO012Fso=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Register","login","createBrowserRouter","RouterProvider","Outlet","Navigate","Navbar","Leftbar","Rightbar","Home","Profile","useContext","AuthContext","jsxDEV","_jsxDEV","App","_s","currentUser","Layout","children","fileName","_jsxFileName","lineNumber","columnNumber","ProtectedRoute","_ref","to","router","path","element","php","_c","$RefreshReg$"],"sources":["C:/Users/rd96/OneDrive/Desktop/Social Media Clone/client/src/App.js"],"sourcesContent":["import Register from \"./pages/Register/Register\";\r\nimport login from \"./php/login.php\";\r\nimport \"./style.scss\"\r\nimport {\r\n    createBrowserRouter,\r\n    RouterProvider,\r\n    Outlet,\r\n    Navigate,\r\n  } from \"react-router-dom\";\r\n  import Navbar from \"./components/Navbar/Navbar\"\r\n  import Leftbar from \"./components/Leftbar/Leftbar\"\r\n  import Rightbar from \"./components/Rightbar/Rightbar\"\r\n  import Home from \"./pages/Home/Home\"\r\n  import Profile from \"./pages/Profile/Profile\"\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"./context/authContext\";\r\n\r\n    //Importing all required stuff to make the code work\r\n\r\nfunction App(){\r\n    const {currentUser} = useContext(AuthContext);\r\n    //Basically code that checks if the local storage has any users stored.\r\n\r\n    const Layout = ()=>{\r\n        return(\r\n            <div>\r\n                <login/>\r\n            \r\n            </div>\r\n        )\r\n    };\r\n    //Code used to keep all navbars the same regardless of page.\r\n\r\n    const ProtectedRoute = ({children}) =>{\r\n        if(!currentUser){\r\n            return <Navigate to=\"/Login\"/>\r\n        }\r\n\r\n        return children\r\n    }\r\n\r\n    const router = createBrowserRouter([\r\n        {\r\n            path: \"/\",\r\n            element: (\r\n                <ProtectedRoute>\r\n                    <Layout />\r\n                </ProtectedRoute>\r\n            ),\r\n            children:[\r\n                {\r\n                    path:\"/\",\r\n                    element:<Home/>\r\n                },\r\n                {\r\n                    path:\"/Profile/:id\",\r\n                    element:<Profile/>\r\n                },\r\n            ]\r\n        },\r\n        \r\n        {\r\n          path: \"./php\",\r\n          element: <login.php />,\r\n        },\r\n        {\r\n            path: \"/Register\",\r\n            element: <Register/>,\r\n          },\r\n      ]);\r\n    //Code used to change pages on the Register/Login screen.\r\n    return (\r\n        <div>\r\n            <RouterProvider router={router} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}